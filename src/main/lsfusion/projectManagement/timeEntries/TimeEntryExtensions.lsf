MODULE TimeEntryExtensions;

REQUIRE TimeEntry, Project, ProjectTimeEntry, TimeEntryHours, ItemSales, Employee;

NAMESPACE ProjectManagement;

// Добавляем новые поля для процентов и дополнительных сотрудников
percent 'Процент' = DATA NUMERIC[5,2] (TimeEntry);
employee2 'Сотрудник 2' = DATA Employee (TimeEntry);
percent2 'Процент 2' = DATA NUMERIC[5,2] (TimeEntry);
employee3 'Сотрудник 3' = DATA Employee (TimeEntry);
percent3 'Процент 3' = DATA NUMERIC[5,2] (TimeEntry);
employee4 'Сотрудник 4' = DATA Employee (TimeEntry);
percent4 'Процент 4' = DATA NUMERIC[5,2] (TimeEntry);

// Определяем уникальные имена для дополнительных сотрудников
nameEmployee2 'Сотрудник 2' (TimeEntry t) = MasterData.name(employee2(t));
nameEmployee3 'Сотрудник 3' (TimeEntry t) = MasterData.name(employee3(t));
nameEmployee4 'Сотрудник 4' (TimeEntry t) = MasterData.name(employee4(t));

// Создаем новое поле descriptionText типа TEXT
descriptionText 'Описание' = DATA TEXT (TimeEntry);

// Новый класс для строк отметки времени
CLASS TimeEntryLine;

// Связь строки отметки времени с основной записью отметки времени
timeEntry = DATA TimeEntry (TimeEntryLine) NONULL DELETE;

// Вид работ (номенклатура)
workType 'Вид работ' = DATA Item (TimeEntryLine) NONULL;
nameWorkType 'Вид работ' (TimeEntryLine l) = name(workType(l));

// Количество часов
hours 'Количество часов' = DATA NUMERIC[16,3] (TimeEntryLine);

// Количество (например, количество единиц работы, выполненной за это время)
quantity 'Количество' = DATA NUMERIC[16,3] (TimeEntryLine);

// Определение свойства salesQuantity для номенклатуры
salesQuantity 'Доступное количество для продажи' (Item i) = DATA NUMERIC[16,3] (Item);

// Автоматическое заполнение количества, если требуется
defaultWorkQuantity = ABSTRACT CASE NUMERIC[16,3] (TimeEntryLine);
WHEN LOCAL SETCHANGED(workType(TimeEntryLine l)) AND NOT CHANGED(quantity(l)) DO quantity(l) <- defaultWorkQuantity(l);

// Использование свойства salesQuantity для автозаполнения
defaultWorkQuantity(TimeEntryLine l) += WHEN salesQuantity(workType(l)) THEN salesQuantity(workType(l));

// Создание свойства для суммирования часов по строкам номенклатуры
totalHours 'Суммарное количество часов' (TimeEntry t) =
    GROUP SUM hours(TimeEntryLine l) IF timeEntry(l) = t;

// Использование инструкции <- WHEN для записи суммы часов в основное свойство
hours(TimeEntry t) <- totalHours(t) WHEN CHANGED(totalHours(t));

// Расширяем форму timeEntry для добавления новых полей и строк номенклатуры
EXTEND FORM timeEntry
    PROPERTIES(t) percent, nameEmployee2, percent2, nameEmployee3, percent3, nameEmployee4, percent4, descriptionText, totalHours
    OBJECTS l = TimeEntryLine
    PROPERTIES(l) nameWorkType, hours, quantity
    PROPERTIES(l) NEW, DELETE
    FILTERS timeEntry(l) = t;

DESIGN timeEntry {
    OBJECTS {
        MOVE pane {
            REMOVE PROPERTY(hours(t));  // Удаляем старое свойство "Часов" с формы
            REMOVE PROPERTY(nameTimeEntryHours(t));  // Удаляем поле "Шаблон"
            REMOVE PROPERTY(description(t));  // Удаляем старое поле с описанием

            // Строка с первым сотрудником и процентом
            NEW employeeAndPercentPane1 {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(nameEmployee(t)) {
                    captionWidth = 100;
                    valueWidth = 145;
                    alignment = START;
                }
                MOVE PROPERTY(percent(t)) {
                    caption = '%';
                    captionWidth = 20;
                    valueWidth = 55;
                    alignment = START;
                }
            }

            // Строка с сотрудником 2 и процентом 2
            NEW employeeAndPercentPane2 {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(nameEmployee2(t)) {
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = START;
                }
                MOVE PROPERTY(percent2(t)) {
                    caption = '%';
                    captionWidth = 20;
                    valueWidth = 50;
                    alignment = START;
                }
            }

            // Строка с сотрудником 3 и процентом 3
            NEW employeeAndPercentPane3 {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(nameEmployee3(t)) {
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = START;
                }
                MOVE PROPERTY(percent3(t)) {
                    caption = '%';
                    captionWidth = 20;
                    valueWidth = 50;
                    alignment = START;
                }
            }

            // Строка с сотрудником 4 и процентом 4
            NEW employeeAndPercentPane4 {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(nameEmployee4(t)) {
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = START;
                }
                MOVE PROPERTY(percent4(t)) {
                    caption = '%';
                    captionWidth = 20;
                    valueWidth = 50;
                    alignment = START;
                }
            }

            // Строка с проектом
            NEW projectPane {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(nameProject(t)) {
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = START;
                }
            }

            // Строка с суммарными часами
            NEW hoursPane {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(totalHours(t)) {  // Отображаемое свойство для суммы часов
                    caption = 'Суммарное количество часов';
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = CENTER;  // Центрируем значение в поле
                }
            }

            // Строка с датой и типом
            NEW dateAndTypePane {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(date(t)) {
                    caption = 'Дата';
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = START;
                }
                MOVE PROPERTY(nameType(t)) {
                    caption = 'Тип';
                    captionWidth = 100;
                    valueWidth = 150;
                    alignment = START;
                }
            }

            // Строка с новым описанием типа TEXT
            MOVE PROPERTY(descriptionText(t)) {
                captionWidth = 100;
                valueWidth = 450;
                charWidth = 40;
                charHeight = 5;
                alignment = STRETCH;
                flex = 1;
            }

            // Панель для строк с выбором номенклатуры, количеством часов и количеством
            NEW workEntry {
                caption = 'Вид работ';  // Устанавливаем только заголовок "Вид работ"
                alignment = STRETCH;
                MOVE BOX(l) {
                    PROPERTY(nameWorkType(l)) { notNull = TRUE; }
                    PROPERTY(hours(l)) { caption = 'Количество часов'; }
                    PROPERTY(quantity(l)) { caption = 'Количество'; }
                }
            }
        }
    }
}

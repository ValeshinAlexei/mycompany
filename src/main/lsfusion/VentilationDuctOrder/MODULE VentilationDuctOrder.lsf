MODULE VentilationDuctOrder;

REQUIRE DuctNameCatalog, Time, MetaNumerator, Employee, Company, DateUtils, FileUtils, MetaTax;

NAMESPACE Ventilation;

// Определение классов
CLASS Order 'Заказ на вентиляционные трубы';
CLASS OrderLine 'Строка заказа на вентиляционные трубы';
CLASS OrderEvent 'Событие заказа';

// Поля для заказов
number 'Номер заказа' = DATA STRING[20] (Order) NONULL;
date 'Дата заказа' = DATA DATE (Order) NONULL;
customer 'Покупатель' = DATA BPSTRING[100] (Order);
company 'Компания' = DATA BPSTRING[100] (Order);
deliveryAddress 'Адрес доставки' = DATA BPSTRING[255] (Order);
scheduledDate 'Плановая дата доставки' = DATA DATE (Order);

// Поля для событий заказа
orderEvent 'Событие заказа' = DATA OrderEvent (Order) NONULL;

// Поля для строк заказа
event 'Событие строки' = DATA OrderEvent (OrderLine) NONULL DELETE;

// Новые поля для строк заказа
ductName 'Наименование изделия' = DATA BPSTRING[100] (OrderLine);
ductDimensions1 'D1,A,B мм' = DATA BPSTRING[100] (OrderLine);
ductDimensions2 'D2,C,D мм' = DATA BPSTRING[100] (OrderLine);
ductMaterial 'Материал' = DATA BPSTRING[100] (OrderLine);
ductThickness 'Толщина материала' = DATA BPSTRING[10] (OrderLine);
ductQuantity 'Количество' = DATA NUMERIC[10,2] (OrderLine);
ductShinaLength 'Шина (м)' = DATA NUMERIC[10,2] (OrderLine);
ductAngle 'УГ шт' = DATA NUMERIC[5,2] (OrderLine);
ductArea 'Площадь (м²)' = DATA NUMERIC[10,2] (OrderLine);
ductTotalPrice 'Общая цена (руб.)' = DATA NUMERIC[10,2] (OrderLine);
ductDiscount 'Скидка (%)' = DATA NUMERIC[5,2] (OrderLine);
ductPriceWithDiscount 'Цена со скидкой (руб.)' = DATA NUMERIC[10,2] (OrderLine);
ductTotalWeight 'Вес общий (кг)' = DATA NUMERIC[10,3] (OrderLine);

// Новые свойства для типов соединений и жесткости
connectionType1 'Вид соединения 1' = DATA BPSTRING[100] (OrderLine);
connectionType2 'Вид соединения 2' = DATA BPSTRING[100] (OrderLine);
extraRigidity 'Доп. жесткость' = DATA BOOLEAN (OrderLine);

// Добавление порядкового номера строк заказа
index '№' = PARTITION SUM 1 ORDER OrderLine l BY event(l) IN id MATERIALIZED CHARWIDTH 3;

// Определение текущего заказа и текущего события для использования в других формах
currentOrder() = DATA Order();
currentEvent() = DATA OrderEvent();

// Команда для создания события и привязки его к заказу
assignEvent (Order o) {
    IF NOT orderEvent(o) THEN {
        NEW e = OrderEvent {
            orderEvent(o) <- e;
        };
    }
}

// Форма для редактирования заказа
FORM order 'Заказ на вентиляционные трубы'
    OBJECTS o = Order PANEL
    PROPERTIES(o) number, date, customer, company, scheduledDate, deliveryAddress, orderEvent READONLY

    OBJECTS l = OrderLine
    PROPERTIES(l) index, ductName, ductDimensions1, ductDimensions2, ductMaterial, ductThickness,
        ductQuantity, ductShinaLength, ductAngle, ductArea, ductTotalPrice, ductDiscount,
        ductPriceWithDiscount, ductTotalWeight, event READONLY
    PROPERTIES(l) NESTEDSESSION NEW, DELETE, EDIT
    FILTERS event(l) = orderEvent(o)

    EDIT Order OBJECT o

    EVENTS
        ON INIT {
            assignEvent(o);
            currentOrder() <- o;
            currentEvent() <- orderEvent(o);
        }
;

// Форма для редактирования строки заказа
FORM orderLine 'Строка заказа на вентиляционные трубы'
    OBJECTS l = OrderLine PANEL
    PROPERTIES(l) ductName, ductDimensions1, ductDimensions2, ductMaterial, ductThickness,
        ductQuantity,   ductArea, ductDiscount, connectionType1, connectionType2, extraRigidity
EDIT OrderLine OBJECT l
    EVENTS
        ON INIT {
            IF currentOrder() THEN {
                event(l) <- orderEvent(currentOrder());
            }
        }
;

// Форма для списка заказов
FORM orders 'Заказы на вентиляционные трубы'
    OBJECTS o = Order
    PROPERTIES(o) number, date, customer, company, scheduledDate, deliveryAddress
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
;


DESIGN orderLine {
           
        NEW orderL {
        horizontal = TRUE;  // Главный контейнер горизонтальный
        fill = 1;           // Заполняет всю доступную ширину формы

        // Центральный контейнер (Контейнеры 1, 2, 3 и 4)
        NEW centerPane {
            horizontal = TRUE; // Горизонтальный контейнер для параметров и изображения
            flex = 1;
            fill = 1; // Этот контейнер будет больше, чем левый

            // Левый контейнер (Категория - контейнер 1)
            NEW leftPane {
                horizontal = FALSE; // Вертикальный контейнер для категорий
                MOVE PROPERTY(ductName(l)); // Наименование изделия
                flex = 1;  // Контейнер расширяемый
            }

            // Первый блок - параметры изделия (Контейнер 2)
            NEW dimensionsPane {
                horizontal = FALSE; // Вертикальный контейнер
                MOVE PROPERTY(ductDimensions1(l));  // D1, A, B мм
                MOVE PROPERTY(ductDimensions2(l));  // D2, C, D мм
                MOVE PROPERTY(ductQuantity(l));     // Количество
                MOVE PROPERTY(ductMaterial(l));     // Материал
                MOVE PROPERTY(ductThickness(l));     // Толщина
                MOVE PROPERTY(ductDiscount(l));     // Скидка
                flex = 1;  // Блок растягивается на всю ширину
            }

            // Второй блок - Placeholder для изображения (Контейнер 3)
            NEW imagePane {
                horizontal = FALSE; // Вертикальный контейнер
                MOVE PROPERTY(ductArea(l)); // Placeholder для изображения (пока площадь)
                flex = 1;  // Растягиваем на оставшуюся ширину
            }

            // Правый контейнер (Контейнер 4)
            NEW rightPane {
                horizontal = FALSE; // Вертикальный контейнер для соединений
                MOVE PROPERTY(connectionType1(l));  // Свойство "Вид соединения 1"
                MOVE PROPERTY(connectionType2(l));  // Свойство "Вид соединения 2"
                MOVE PROPERTY(extraRigidity(l));    // Свойство "Доп. жесткость"
                flex = 1;  // Контейнер занимает оставшуюся ширину
            }
        }
    }
    
    // Контейнер для кнопок внизу формы
    NEW buttonPane {
        horizontal = TRUE; // Горизонтальное расположение кнопок
        fill = 1;
      flex =1;
        // Контейнер слева
        NEW leftButtons {
            horizontal = FALSE; // Горизонтальный контейнер для тулбара слева
            flex = 0;
            fill = 1;
            MOVE TOOLBARLEFT {  // Перемещаем TOOLBARLEFT в левую часть
                alignment = START;
            }
        }

        // Контейнер справа
        NEW rightButtons {
            horizontal = TRUE; // Горизонтальный контейнер для кнопок справа
            flex = 1;
            fill = 1;
            MOVE TOOLBARRIGHT { // Перемещаем TOOLBARRIGHT в правую часть
                alignment = END;
            }
        }
    }




}





// Навигатор
NAVIGATOR {
    NEW orders FIRST;
}

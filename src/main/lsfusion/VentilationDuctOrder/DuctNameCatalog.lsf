MODULE DuctNameCatalog;

REQUIRE Hierarchy, MetaNumerator;

NAMESPACE MasterData;

CLASS DuctCategory 'Категория изделия';

@defineID(ductCategory, 'Категории изделий', 'DC', 6);

name '{Название}' = DATA ISTRING[50] (DuctCategory) IN id NONULL;
archived 'Архивная' = DATA BOOLEAN (DuctCategory);
active '{Активная}' (DuctCategory c) = NOT archived(c);

// Логические флаги для отображения свойств в категории
showD1 'Показывать D1' = DATA BOOLEAN (DuctCategory);
showA 'Показывать A' = DATA BOOLEAN (DuctCategory);
showB 'Показывать B' = DATA BOOLEAN (DuctCategory);
showLength 'Показывать длину' = DATA BOOLEAN (DuctCategory);
showShina 'Показывать шину' = DATA BOOLEAN (DuctCategory);
showArea 'Показывать площадь' = DATA BOOLEAN (DuctCategory);
showAngle 'Показывать угол' = DATA BOOLEAN (DuctCategory);

// Иерархия категорий
parent = DATA DuctCategory (DuctCategory) INDEXED;
nameParent 'Родитель' (DuctCategory c) = name(parent(c));

rootDuctCategory() = GROUP MIN DuctCategory c AS DuctCategory IF NOT parent(c);

CONSTRAINT DROPPED(DuctCategory c IS DuctCategory) AND PREV(parent(DuctCategory child) = c)
    MESSAGE 'Запрещено удалять категории, на которые ссылаются другие категории';

// Расчет уровня категорий
level 'Уровень' (DuctCategory child, DuctCategory parent) =
    RECURSION 1l IF child IS DuctCategory AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

canonicalName 'Каноническое имя' (DuctCategory c) =
    GROUP CONCAT name(DuctCategory parent), ' / ' ORDER DESC level(c, parent) CHARWIDTH 50 IN id;
canonicalNameParent 'Родитель' (DuctCategory c) = canonicalName(parent(c));

// Форма для редактирования категории
FORM ductCategory 'Категория изделия'
    OBJECTS c = DuctCategory PANEL
    PROPERTIES(c) name, archived, canonicalNameParent,
        showD1, showA, showB, showLength, showShina, showArea, showAngle
    EDIT DuctCategory OBJECT c
;

DESIGN ductCategory {
    OBJECTS {
        NEW pane {
            NEW id {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(name(c));
                MOVE PROPERTY(archived(c));
            }
            MOVE PROPERTY(canonicalNameParent(c)) { alignment = STRETCH; };
            NEW params {
                alignment = STRETCH;
                MOVE PROPERTY(showD1(c));
                MOVE PROPERTY(showA(c));
                MOVE PROPERTY(showB(c));
                MOVE PROPERTY(showLength(c));
                MOVE PROPERTY(showShina(c));
                MOVE PROPERTY(showArea(c));
                MOVE PROPERTY(showAngle(c));
            }
        }
        NEW tabs {
            fill = 1;
            tabbed = TRUE;
            NEW default {
                caption = 'Default values';
            }
        }
    }
}

// Логика добавления новой категории
newDuctCategory 'Новая категория' (DuctCategory cc) {
    NEWSESSION {
        NEW cat = DuctCategory {
            parent(cat) <- cc;
            DIALOG ductCategory OBJECTS c = cat DOCKED DO seek(cat);
        }
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

// Форма списка категорий
FORM ductCategories 'Категории изделий'
    OBJECTS c = DuctCategory
    PROPERTIES(c) READONLY name, canonicalNameParent
    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE
    FILTERGROUP active
        FILTER '{Активная}' active(c) 'F8' DEFAULT
        FILTER 'Архивная' archived(c) 'F7'

    TREE ductCategories cc = DuctCategory PARENT parent(cc)
    PROPERTIES READONLY name(cc)
    PROPERTIES(cc) NEWSESSION EDIT, DELETE
    PROPERTIES(cc) newDuctCategory DRAW cc TOOLBAR
    LIST DuctCategory OBJECT c
;

DESIGN ductCategories {
    OBJECTS {
        fill = 1;
        tabbed = TRUE;
        NEW list {
            caption = 'Список';
            MOVE BOX(c);
        }
        NEW tree {
            caption = 'Дерево';
            MOVE BOX(TREE ductCategories);
        }
    }
}

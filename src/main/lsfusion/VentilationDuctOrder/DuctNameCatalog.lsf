MODULE DuctNameCatalog;

REQUIRE Hierarchy, MetaNumerator;

NAMESPACE MasterData;

CLASS DuctCategory 'Duct Category';

@defineID(ductCategory, 'Duct Categories', 'DC', 6);

name '{Name}' = DATA ISTRING[50] (DuctCategory) IN id NONULL;

archived 'Archived' = DATA BOOLEAN (DuctCategory);
active '{Active}' (DuctCategory c) = NOT archived(c);

// Иерархия категорий
parent = DATA DuctCategory (DuctCategory) INDEXED;

nameParent 'Parent' (DuctCategory c) = name(parent(c));

rootDuctCategory() = GROUP MIN DuctCategory c AS DuctCategory IF NOT parent(c);

CONSTRAINT DROPPED(DuctCategory c IS DuctCategory) AND PREV(parent(DuctCategory child) = c)
    MESSAGE 'It is forbidden to delete categories that are referenced by other categories';

// Расчет уровня категорий
level 'Level' (DuctCategory child, DuctCategory parent) =
    RECURSION 1l IF child IS DuctCategory AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

canonicalName 'Canonical name' (DuctCategory c) =
    GROUP CONCAT name(DuctCategory parent), ' / ' ORDER DESC level(c, parent) CHARWIDTH 50 IN id;
canonicalNameParent 'Parent' (DuctCategory c) = canonicalName(parent(c));

levelRoot '{hierarchy.level}' (DuctCategory child, DuctCategory parent) = PARTITION SUM 1 IF level(child, parent)
    ORDER DESC level(child, parent)
    BY child MATERIALIZED;
ductCategoryRoot (DuctCategory child, level) = GROUP NAGGR DuctCategory parent BY levelRoot(child, parent);

ductCategory1 (DuctCategory child) = ductCategoryRoot(child, 1) MATERIALIZED;
nameDuctCategory1 'Category 1' (DuctCategory child) = name(ductCategory1(child));

ductCategory2 (DuctCategory child) = ductCategoryRoot(child, 2) MATERIALIZED;
nameDuctCategory2 'Category 2' (DuctCategory child) = name(ductCategory2(child));

ductCategory3 (DuctCategory child) = ductCategoryRoot(child, 3) MATERIALIZED;
nameDuctCategory3 'Category 3' (DuctCategory child) = name(ductCategory3(child));

ductCategory4 (DuctCategory child) = ductCategoryRoot(child, 4) MATERIALIZED;
nameDuctCategory4 'Category 4' (DuctCategory child) = name(ductCategory4(child));

ductCategory5 (DuctCategory child) = ductCategoryRoot(child, 5) MATERIALIZED;
nameDuctCategory5 'Category 5' (DuctCategory child) = name(ductCategory5(child));

ductCategory6 (DuctCategory child) = ductCategoryRoot(child, 6) MATERIALIZED;
nameDuctCategory6 'Category 6' (DuctCategory child) = name(ductCategory6(child));

// Форма для редактирования категории
FORM ductCategory 'Duct Category'
    OBJECTS c = DuctCategory PANEL
    PROPERTIES(c) name,  archived, canonicalNameParent

    EDIT DuctCategory OBJECT c
;

DESIGN ductCategory {
    OBJECTS {
        NEW pane {
            NEW id {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(name(c));
                
                MOVE PROPERTY(archived(c));
            }
            MOVE PROPERTY(canonicalNameParent(c)) { alignment = STRETCH; };
            NEW params {
                alignment = STRETCH;
            }
        }
        NEW tabs {
            fill = 1;
            tabbed = TRUE;
            NEW default {
                caption = 'Default values';
            }
        }
    }
}

// Логика добавления новой категории
newDuctCategory 'Duct Category' (DuctCategory cc) {
    NEWSESSION {
        NEW cat = DuctCategory {
            parent(cat) <- cc;
            DIALOG ductCategory OBJECTS c = cat DOCKED DO seek(cat);
        }
    }
} IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

// Форма списка категорий
FORM ductCategories 'Duct Categories'
    OBJECTS c = DuctCategory
    PROPERTIES(c) READONLY name, canonicalNameParent
    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE
    FILTERGROUP active
        FILTER '{Active}' active(c) 'F8' DEFAULT
        FILTER 'Archived' archived(c) 'F7'

    TREE ductCategories cc = DuctCategory PARENT parent(cc)
    PROPERTIES READONLY name(cc)
    PROPERTIES(cc) NEWSESSION EDIT, DELETE
    PROPERTIES(cc) newDuctCategory DRAW cc TOOLBAR
    ORDERS name(cc)
    FILTERGROUP activeC
        FILTER '{Active}' active(cc) 'F8' DEFAULT
        FILTER 'Archived' archived(cc) 'F7'

    LIST DuctCategory OBJECT c

    EVENTS ON CHANGE cc { SEEK ductCategories.c = cc; }
;

DESIGN ductCategories {
    OBJECTS {
        fill = 1;
        tabbed = TRUE;
        NEW list {
            caption = 'List';
            MOVE BOX(c);
        }
        NEW tree {
            caption = 'Tree';
            MOVE BOX(TREE ductCategories);
        }
    }
}


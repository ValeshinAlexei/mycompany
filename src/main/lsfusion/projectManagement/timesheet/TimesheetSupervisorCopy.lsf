MODULE TimesheetSupervisorCopy;

REQUIRE DateUtils, ProjectManagementSettings, Employee, Timesheet,
        ProjectTimeEntry, ProjectAssignment, TimeEntryHours, TimeEntryExtensions, Security;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

// Свойство для получения всех зарплатных сумм за день по каждому сотруднику
salaryList 'Список зарплат' (Employee e, DATE d) =
    GROUP SUM totalSalary(e, d); // Используем свойство из TimeEntryExtensions

// Свойство для подсчета суммы зарплаты за выбранный период
salaryTotal 'Сумма зарплаты за период' (Employee e, INTERVAL[DATE] dates) =
    GROUP SUM salaryList(e, d) IF d >= from(dates) AND d <= to(dates);

// Свойство для подсчета часов за выбранный период
hoursTotal 'Часы за период' (Employee e, INTERVAL[DATE] dates) =
    GROUP SUM hoursTimesheet(d, e) IF d >= from(dates) AND d <= to(dates);


// Свойство для объединения часов и зарплаты в одну строку
summary 'Часы / Зарплата' (Employee e, DATE d) =
    hoursTimesheet(d, e) + 'ч' + '/' + ROUND(salaryList(e, d)) + ' ₽';


// Проверяем, является ли текущий пользователь администратором
isAdmin 'Администратор?' (User u) =
    GROUP SUM 1 IF
        (userRoles(u) = 'Администратор' OR userRoles(u) = 'admin');



// Копия формы Supervisor timesheet
// Форма Supervisor timesheet с отладкой ролей
FORM timesheetSupervisorCopy 'Зарплатный Табель'

    // Логика для вывода сообщения при инициализации формы
    EVENTS ON INIT {
        IF isAdmin(currentUser()) THEN {
            MESSAGE 'Текущий пользователь является администратором.';
        } ELSE {
            MESSAGE 'Текущий пользователь не является администратором.';
        }
    }




    OBJECTS dates = INTERVAL[DATE] PANEL NULL
    PROPERTIES dates '' = VALUE(dates)

    PROPERTIES() nameTimesheetProject, nameTimesheetTimeEntryType SELECT 'buttonGroup',
        nameTimesheetTimeEntryHours SHOWIF timesheetTimeEntryType() AND countHours(timesheetTimeEntryType()) SELECT 'buttonGroup'

    PROPERTIES READONLY hoursTimesheet(dates)

    OBJECTS d = DATE
    FILTERS iterate(d, from(dates), to(dates))

    // Отображаем всех сотрудников для администратора, а для обычных пользователей — только их записи
    OBJECTS e = Employee
    FILTERS IF isAdmin(currentUser()) THEN TRUE ELSE e = currentUser()


    PROPERTIES(e) READONLY firstName, lastName, namePosition
    PROPERTIES salaryTotal(e, dates)READONLY,hoursTotal(e, dates) READONLY // Добавляем свойство в форму для отображения
    PROPERTIES summary(e, d) WAIT COLUMNS (d) HEADER extractDay(d) BACKGROUND backgroundHoursTimesheet(d, e)

    // Отладка ролей
    EVENTS ON INIT {
        MESSAGE 'Текущие роли пользователя: ' + userRoles(currentUser());
    }

    PROPERTIES prevInterval '<' = { SEEK timesheetSupervisorCopy.dates = prevMonthInterval(dates); },
        nextInterval '>' = { SEEK timesheetSupervisorCopy.dates = nextMonthInterval(dates); }
;

// Оформление копии формы timesheetSupervisorCopy
DESIGN timesheetSupervisorCopy {
    OBJECTS {
        NEW header {
            alignment = STRETCH;
            horizontal = TRUE;
            NEW interval {
                horizontal = TRUE;
                MOVE PROPERTY(prevInterval);
                MOVE PROPERTY(dates);
                MOVE PROPERTY(nextInterval);
            }
            MOVE PROPERTY(nameTimesheetProject());
            MOVE PROPERTY(hoursTimesheet(dates));
        }
        NEW tabbedPane {
            tabbed = TRUE;
            fill = 1;
            NEW timesheet {
                caption = 'Timesheet';
                NEW edit {
                    horizontal = TRUE;
                    MOVE PROPERTY(nameTimesheetTimeEntryType()) {
                        caption = '';
                        placeholder = 'Type';
                    }
                    MOVE PROPERTY(nameTimesheetTimeEntryHours()) {
                        caption = '';
                        placeholder = 'Hours';
                    }
                }
                MOVE BOX(e) {
                    caption = '';
                    PROPERTY(summary(e, d)) {
                        width = 200;
                        height = 40;
                        charWidth = 10;
                        charHeight = 5;
                    }
                }
            }
        }
    }
}

// Навигатор для копии формы
NAVIGATOR {
    NEW FOLDER salary 'Зарплата' WINDOW toolbar FIRST {
        NEW FORM timesheetSupervisorCopy;
    }
}

WHEN LOCAL FORMS timesheetSupervisorCopy CHANGED(timesheetTimeEntryType()) DO
    timesheetTimeEntryHours() <- defaultHours(timesheetTimeEntryType());

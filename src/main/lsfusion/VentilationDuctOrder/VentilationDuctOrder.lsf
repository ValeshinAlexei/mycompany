MODULE VentilationDuctOrder;

REQUIRE DuctCategoryImage,MetaNumerator, VentilationOrderType, DuctNameCatalog, Time, Employee, Company, DateUtils, FileUtils, MetaTax;

NAMESPACE Ventilation;

CLASS Order 'Заказ на вентиляционные трубы';
CLASS OrderLine 'Строка заказа на вентиляционные трубы';
CLASS OrderEvent 'Событие заказа';

// Свойство для типа заказа, связанного с нумератором
type 'Тип заказа' = DATA OrderType (Order);

// Генерация номера на основе нумератора
@defineNumberType(Order);  // Объявление номера с помощью макроса

// Поля для заказов
date 'Дата заказа' = DATA DATE (Order) NONULL;
customer 'Покупатель' = DATA BPSTRING[100] (Order);
company 'Компания' = DATA BPSTRING[100] (Order);
deliveryAddress 'Адрес доставки' = DATA BPSTRING[255] (Order);
scheduledDate 'Плановая дата доставки' = DATA DATE (Order);

// Поля для событий заказа
orderEvent 'Событие заказа' = DATA OrderEvent (Order) NONULL;

// Поля для строк заказа
event 'Событие строки' = DATA OrderEvent (OrderLine) NONULL DELETE;

// Использование категорий для выбора изделия
ductCategory 'Категория изделия' = DATA DuctCategory (OrderLine);
categoryName 'Имя категории' (OrderLine l) = canonicalName(ductCategory(l));

// Свойство для отображения имени типа заказа
nameType 'Название типа заказа' (Order o) = name(type(o));

// Определение полей для D1, A и B
ductDimensionD1 'D1 мм' = DATA NUMERIC[10,0] (OrderLine);
ductDimensionA 'A мм' = DATA NUMERIC[10,0] (OrderLine);
ductDimensionB 'B мм' = DATA NUMERIC[10,0] (OrderLine);

// Свойство для представления D1, A, B мм
ductDimensions1 'D1,A,B мм' (OrderLine l) =
    IF ductDimensionD1(l) THEN STRING(ductDimensionD1(l))
    ELSE IF ductDimensionA(l) AND ductDimensionB(l) THEN
        STRING(ductDimensionA(l)) + ' x ' + STRING(ductDimensionB(l))
    ELSE NULL;

// Определение полей для D2, C и D
ductDimensionD2 'D2 мм' = DATA NUMERIC[10,0] (OrderLine);
ductDimensionC 'C мм' = DATA NUMERIC[10,0] (OrderLine);
ductDimensionD 'D мм' = DATA NUMERIC[10,0] (OrderLine);

// Свойство для представления D2, C, D мм
ductDimensions2 'D2,С,В мм' (OrderLine l) =
    IF ductDimensionD2(l) THEN STRING(ductDimensionD2(l))
    ELSE IF ductDimensionC(l) AND ductDimensionB(l) THEN
        STRING(ductDimensionB(l)) + ' x ' + STRING(ductDimensionB(l))
    ELSE NULL;

ductMaterial 'Материал' = DATA BPSTRING[100] (OrderLine);

ductQuantity 'Количество' = DATA NUMERIC[10,2] (OrderLine);

// Добавляем новое свойство для длины
ductLength 'Длина (м)' = DATA NUMERIC[10,2] (OrderLine);

ductShinaLength 'Шина (м)' = DATA NUMERIC[10,2] (OrderLine);
ductAngle 'УГ шт' = DATA NUMERIC[5,2] (OrderLine);
ductArea 'Площадь (м²)' = DATA NUMERIC[10,2] (OrderLine);
ductTotalPrice 'Общая цена (руб.)' = DATA NUMERIC[10,2] (OrderLine);
ductDiscount 'Скидка (%)' = DATA NUMERIC[5,2] (OrderLine);
ductPriceWithDiscount 'Цена со скидкой (руб.)' = DATA NUMERIC[10,2] (OrderLine);
ductTotalWeight 'Вес общий (кг)' = DATA NUMERIC[10,3] (OrderLine);

// Новые свойства для типов соединений и жесткости
connectionType1 'Вид соединения 1' = DATA BPSTRING[100] (OrderLine);
connectionType2 'Вид соединения 2' = DATA BPSTRING[100] (OrderLine);
extraRigidity 'Доп. жесткость' = DATA BOOLEAN (OrderLine);

// Добавление порядкового номера строк заказа
index '№' = PARTITION SUM 1 ORDER OrderLine l BY event(l) IN id MATERIALIZED CHARWIDTH 3;

// Определение текущего заказа и текущего события для использования в других формах
currentOrder() = DATA Order();
currentEvent() = DATA OrderEvent();

// Команда для создания события и привязки его к заказу
assignEvent (Order o) {
    IF NOT orderEvent(o) THEN {
        NEW e = OrderEvent {
            orderEvent(o) <- e;
        };
    }
}

// Форма для редактирования заказа
FORM order 'Заказ на вентиляционные трубы'
    OBJECTS o = Order PANEL
    PROPERTIES(o) number, nameType, date, customer, company, scheduledDate, deliveryAddress, orderEvent READONLY

    OBJECTS l = OrderLine
    PROPERTIES(l) index, categoryName, ductDimensions1, ductDimensions2, ductMaterial,
        ductQuantity, ductLength, ductShinaLength, ductAngle, ductArea, ductTotalPrice, ductDiscount,
        ductPriceWithDiscount, ductTotalWeight, event READONLY
    PROPERTIES(l) NESTEDSESSION NEW, DELETE, EDIT
    FILTERS event(l) = orderEvent(o)

    EDIT Order OBJECT o

    EVENTS
        ON INIT {
            assignEvent(o);  // Присваиваем событие
            currentOrder() <- o;  // Устанавливаем текущий заказ
            currentEvent() <- orderEvent(o);  // Устанавливаем текущее событие
        };

// Форма для списка заказов
FORM orders 'Заказы на вентиляционные трубы'
    OBJECTS o = Order
    PROPERTIES(o) number,
        date,
        customer,
        company,
        scheduledDate,
        deliveryAddress
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    LIST Order OBJECT o
;

categoryImage '' (OrderLine l) = image(ductCategory(l));


// Форма для редактирования строки заказа
// Форма для редактирования строки заказа
FORM orderLine 'Строка заказа на вентиляционные трубы'
    OBJECTS l = OrderLine PANEL
    TREE ductCategories cc = DuctCategory PARENT parent(cc)
    PROPERTIES READONLY name(cc)
    ORDERS name(cc)

    PROPERTIES(l) ductDimensionD1, ductDimensionA, ductDimensionB, ductDimensionD2, ductDimensionC, ductDimensionD, ductMaterial,
        ductQuantity, ductLength, ductShinaLength, ductArea, ductDiscount, connectionType1, connectionType2, extraRigidity,
        categoryImage

    EVENTS ON CHANGE cc {
        IF cc THEN {
            ductCategory(l) <- cc;  // Присваиваем выбранную категорию
        }
    }

    EDIT OrderLine OBJECT l

    EVENTS
        ON INIT {
            IF currentOrder() THEN {
                event(l) <- orderEvent(currentOrder());
            }
            // Если категория уже назначена строке заказа
            IF ductCategory(l) THEN {
                // Выделяем сохранённую категорию в дереве
                SEEK ductCategories.cc = ductCategory(l);
            }
        }
;



// Дизайн формы строки заказа
DESIGN orderLine {
    OBJECTS {
        NEW pane {
            horizontal = TRUE;
            fill = 1;

            NEW leftPane {
                fill = 1;
                width = 300;

                NEW categoryBox {
                    caption = 'Тип изделия';
                    MOVE BOX(TREE ductCategories);  // Исправлено на ductCategories
                }
            }

            NEW centerPane {
                fill = 1;
                width = 250;
                horizontal = FALSE;

                NEW propertiesPane {
                    caption = 'Свойства изделия';
                    horizontal = FALSE;

                    MOVE PROPERTY(ductDimensionD1(l)) {
                        showIf = showD1(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductDimensionA(l)) {
                        showIf = showA(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductDimensionB(l)) {
                        showIf = showB(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductDimensionD2(l)) {
                        showIf = showD2(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductDimensionC(l)) {
                        showIf = showC(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductDimensionD(l)) {
                        showIf = showD(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductLength(l)) {
                        showIf = showLength(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductQuantity(l)) {
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductShinaLength(l)) {
                        showIf = showShina(ductCategory(l));
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductMaterial(l)) {
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductDiscount(l)) {
                        captionWidth = 80;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(ductArea(l)) {
                        captionWidth = 80;
                        valueWidth = 100;
                    }

                }
            }

            NEW rightPane {
                fill = 1;
                width = 300;

                NEW imageBox {
                    horizontal = FALSE;
                    size = (200, 180);
                    caption = 'Изображение изделия';
                    MOVE PROPERTY(categoryImage(l));
                }

                NEW connectionsPane {
                    caption = 'Соединения';
                    horizontal = FALSE;
                    MOVE PROPERTY(connectionType1(l)) {
                        captionWidth = 90;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(connectionType2(l)) {
                        captionWidth = 90;
                        valueWidth = 100;
                    }
                    MOVE PROPERTY(extraRigidity(l));
                }
            }
        }
    }
}

// Навигатор — добавление форм списка категорий и заказов в одну вкладку
NAVIGATOR {
    NEW FOLDER ventilationDucts 'Вентиляционные трубы' WINDOW toolbar {
        NEW FORM orders 'Заказы на вентиляционные трубы' = orders;
        NEW FORM ductCategories 'Категории изделий' = ductCategories;
        NEW FORM orderTypes 'Типы заказов' = orderTypes;
    }
}
